name: Prisma Migrate

on:
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Test DB connectivity
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: echo "SELECT 1" | npx prisma db execute --stdin --url $DATABASE_URL

      # ðŸ‘‰ Si le dossier prisma/migrations est vide, on fait db push (1Ê³áµ‰ initialisation)
      - name: Check if migrations exist
        id: mig
        run: |
          if [ -d "prisma/migrations" ] && [ "$(ls -A prisma/migrations || true)" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Initialize schema (db push when no migrations)
        if: steps.mig.outputs.exists == 'false'
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma db push --accept-data-loss

      # ðŸ‘‰ Si on a des migrations, on les dÃ©ploie normalement
      - name: Apply migrations (deploy)
        if: steps.mig.outputs.exists == 'true'
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma migrate deploy

      - name: Seed database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma db seed
